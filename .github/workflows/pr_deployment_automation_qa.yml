
# Unique name for this workflow
name: Deploy qa branch changes to qa org

# Definition when the workflow should run
on:
    push:
      branches: [ environment/qa ]
      paths:
        - 'force-app/**'
            

# Jobs to be executed
jobs:
    Deployment-to-qa-org:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
                  mkdir -p ~/cli/sf
                  tar xJf sf-linux-x64.tar.xz -C ~/cli/sf --strip-components 1
                  echo "$HOME/cli/sf/bin" >> $GITHUB_PATH
                  ~/cli/sf/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            # Store secret for orgs
            - name: 'Populate auth file with SFDX_URL secret of the qa orgs'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_QA_URL}} > ./SFDX_QA_URL.txt

            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

          
            # Authenticate to org
            - name: 'Authenticate to QA'
              run: sf org login sfdx-url -f ./SFDX_QA_URL.txt -s -a staging

            # Check for changes and deploy in force-app directory
            - name: 'Check-only deploy delta changes - run all tests'
              run: |
                changed_files=$(git diff --name-only --diff-filter=d HEAD~1..HEAD | grep "^force-app/" | wc -l)
                if [ $changed_files -gt 0 ]; then
                  echo "Changes detected in force-app directory."
                  sfdx project deploy start --source-dir "changed-sources/force-app" -a 59.0  -w 1000 --json
                else
                  echo "No changes detected in force-app directory."
                fi

            # Check for changes and deploy in descriptive changes directory
            - name: 'Deploy destructive changes (if any)'
              run: |
                  sfdx project deploy start --metadata-dir "changed-sources/destructiveChanges" --dry-run -w 1000 --json 


            # Housekeeping
                    
            - name: "Clean-up local files"
              run: rm -f ./server.key  
