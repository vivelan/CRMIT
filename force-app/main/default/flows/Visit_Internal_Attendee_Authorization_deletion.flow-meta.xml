<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <description>Checking visit share exist or not for the deleted internal attendee</description>
        <name>Visit_Share_Check</name>
        <label>Visit Share Check</label>
        <locationX>182</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Visit_Share_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_visit_share_records</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_visit_share_records</targetReference>
            </connector>
            <label>Visit Share Exist</label>
        </rules>
    </decisions>
    <description>Flow is used to delete the visit share record for internal attendee when the user is removed</description>
    <environments>Default</environments>
    <interviewLabel>Visit Internal Attendee Authorization deletion {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Visit Internal Attendee Authorization deletion</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordDeletes>
        <name>Delete_visit_share_records</name>
        <label>Delete visit share records</label>
        <locationX>50</locationX>
        <locationY>503</locationY>
        <inputReference>Get_visit_share_records</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>Get_visit_share_records</name>
        <label>Get visit share records</label>
        <locationX>182</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Visit_Share_Check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Visit__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Visit__Share</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_visit_share_records</targetReference>
        </connector>
        <object>Visitor__c</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
</Flow>
