<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Populate_visit_share</name>
        <label>Populate visit share</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>CustomVisitShare.AccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CustomVisitShare.ParentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Visit__r.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CustomVisitShare.UserOrGroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Visit_Share</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Active_User</name>
        <label>Check Active User</label>
        <locationX>182</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.User__r.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_visit_share</targetReference>
            </connector>
            <label>Active</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check internal attendee availablity in the visitor record</description>
        <name>Internal_Attendee_check</name>
        <label>Internal Attendee check</label>
        <locationX>611</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New_Attendee</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.User__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Visit__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_visit_share_records</targetReference>
            </connector>
            <label>New Attendee</label>
        </rules>
    </decisions>
    <decisions>
        <name>Visit_Share_Exists</name>
        <label>Visit Share Exists</label>
        <locationX>380</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Visit_share_Not_Exist</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_visit_share_records</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Active_User</targetReference>
            </connector>
            <label>Visit share Not Exist</label>
        </rules>
    </decisions>
    <description>Flow is used to create authorization for the internal attendees</description>
    <environments>Default</environments>
    <interviewLabel>Visit Authori {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Visit Internal Attendee Authorization</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Visit_Share</name>
        <label>Create Visit Share</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <inputReference>CustomVisitShare</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_visit_share_records</name>
        <label>Get visit share records</label>
        <locationX>380</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Visit_Share_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Visit__r.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Visit__Share</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>485</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Internal_Attendee_check</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Visit__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>User__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Visitor__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>CustomVisitShare</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Visit__Share</objectType>
    </variables>
</Flow>
