<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>AddTaskRecordstoCollection</name>
        <label>Add Task Records to Collection</label>
        <locationX>320</locationX>
        <locationY>804</locationY>
        <assignmentItems>
            <assignToReference>TaskCollectionVar</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TaskRecordVar</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckBeforeCreatingTaskstoZK</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddTaskRecordsToCollection2</name>
        <label>Add Task Records</label>
        <locationX>56</locationX>
        <locationY>1164</locationY>
        <assignmentItems>
            <assignToReference>TaskCollectionVar</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TaskRecordVar</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateTasks</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignTaskforSalesRep</name>
        <label>Assign Task for Sales Rep</label>
        <locationX>321</locationX>
        <locationY>684</locationY>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SubjectForSalesRep</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SalesRep</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forD_DueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetTaskRecordTypeId.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddTaskRecordstoCollection</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignTaskforZA</name>
        <label>Assign Task for ZA</label>
        <locationX>992</locationX>
        <locationY>617</locationY>
        <assignmentItems>
            <assignToReference>TaskRecordVar.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forD_DueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ExternalOffice</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SubjectForSalesRep</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AssignTaskstoCollection3</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignTaskForZK</name>
        <label>Assign Task for ZK</label>
        <locationX>56</locationX>
        <locationY>1044</locationY>
        <assignmentItems>
            <assignToReference>TaskRecordVar.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AccountManager</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Priority</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.Subject</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SubjectForAccountManager</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.WhatId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.ActivityDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>forD_DueDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>TaskRecordVar.RecordTypeId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetTaskRecordTypeId.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>AddTaskRecordsToCollection2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignTaskstoCollection3</name>
        <label>Assign Tasks to Collection</label>
        <locationX>1005</locationX>
        <locationY>845</locationY>
        <assignmentItems>
            <assignToReference>TaskCollectionVar</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>TaskRecordVar</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckBeforeCreatingTaskstoZK</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CheckBeforeCreatingTaskforSalesRep</name>
        <label>Check Before Creating Task for Sales Rep</label>
        <locationX>559</locationX>
        <locationY>779</locationY>
        <defaultConnector>
            <targetReference>CheckBeforeCreatingTaskstoZK</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CheckConditionForZA</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.TotalOverdue__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.TotalOverdue__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ExternalOffice</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignTaskforZA</targetReference>
            </connector>
            <label>Check Condition For ZA</label>
        </rules>
        <rules>
            <name>CheckConditionForZM</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SalesRep</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.TotalOverdue__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.TotalOverdue__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignTaskforSalesRep</targetReference>
            </connector>
            <label>Check Condition For ZM</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckBeforeCreatingTaskstoZK</name>
        <label>Check Before Creating Tasks to ZK</label>
        <locationX>323</locationX>
        <locationY>957</locationY>
        <defaultConnector>
            <targetReference>CreateTasks</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CheckConditionforZK</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>AccountManager</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CurrentShortfall__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CurrentShortfall__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AssignTaskForZK</targetReference>
            </connector>
            <label>Check Condition for ZK</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckByPassCondition</name>
        <label>CheckByPassCondition</label>
        <locationX>1018</locationX>
        <locationY>236</locationY>
        <defaultConnector>
            <targetReference>AssignSalesRep</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Execute Flow</defaultConnectorLabel>
        <rules>
            <name>DontExecuteFlow</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>GetByPassFlowConfiguration.ByPassedUsers__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$User.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetByPassFlowConfiguration.ByPassedProfiles__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Profile.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>GetByPassFlowConfiguration.ByPassFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Setup.ByPassLogic__c.ByPassFlow__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Dont Execute Flow</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>forD_DueDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()+1</expression>
    </formulas>
    <interviewLabel>Auto Create Tasks For Accounts {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Auto Create Tasks For Accounts</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateException</name>
        <label>Create Exception</label>
        <locationX>320</locationX>
        <locationY>1404</locationY>
        <inputAssignments>
            <field>ErrorOccuredIn__c</field>
            <value>
                <stringValue>Flow</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ExceptionDetails__c</field>
            <value>
                <elementReference>$Flow.FaultMessage</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Object__c</field>
            <value>
                <stringValue>Task</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Operation__c</field>
            <value>
                <stringValue>Auto Creation Task Records failed for Accounts </stringValue>
            </value>
        </inputAssignments>
        <object>Exception__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateTasks</name>
        <label>Create Tasks</label>
        <locationX>56</locationX>
        <locationY>1284</locationY>
        <faultConnector>
            <targetReference>CreateException</targetReference>
        </faultConnector>
        <inputReference>TaskCollectionVar</inputReference>
    </recordCreates>
    <recordLookups>
        <name>AssignAccountManager</name>
        <label>Assign Account Manager</label>
        <locationX>569</locationX>
        <locationY>501</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetTaskRecordTypeId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ChannelOfDistribution__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RiskRelevantChannelOfDistribution__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZK</stringValue>
            </value>
        </filters>
        <object>AccountTeamMember</object>
        <outputAssignments>
            <assignToReference>AccountManager</assignToReference>
            <field>UserId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>AssignSalesRep</name>
        <label>Assign Sales Rep</label>
        <locationX>584</locationX>
        <locationY>325</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetExternalAgency</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ChannelOfDistribution__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.RiskRelevantChannelOfDistribution__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZM</stringValue>
            </value>
        </filters>
        <object>AccountTeamMember</object>
        <outputAssignments>
            <assignToReference>SalesRep</assignToReference>
            <field>UserId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetByPassFlowConfiguration</name>
        <label>GetByPassFlow Configuration</label>
        <locationX>888</locationX>
        <locationY>115</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckByPassCondition</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>AutoCreateTasksForAccounts</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ByPassFlowConfiguration__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetExternalAgency</name>
        <label>Get External Agency</label>
        <locationX>868</locationX>
        <locationY>436</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignAccountManager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>TeamMemberRole</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ZA</stringValue>
            </value>
        </filters>
        <object>AccountTeamMember</object>
        <outputAssignments>
            <assignToReference>ExternalOffice</assignToReference>
            <field>UserId</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>GetTaskRecordTypeId</name>
        <label>Get Task Record Type Id</label>
        <locationX>569</locationX>
        <locationY>638</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckBeforeCreatingTaskforSalesRep</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SAGTaskRecord</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>458</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>GetByPassFlowConfiguration</targetReference>
        </connector>
        <filterLogic>or</filterLogic>
        <filters>
            <field>TotalOverdue__c</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <filters>
            <field>CurrentShortfall__c</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <object>Account</object>
        <schedule>
            <frequency>Weekly</frequency>
            <startDate>2023-03-09</startDate>
            <startTime>00:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AccountManager</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ExternalOffice</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SalesRep</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SubjectForAccountManager</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Label.TaskSubjectForAccountManager</elementReference>
        </value>
    </variables>
    <variables>
        <name>SubjectForSalesRep</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$Label.TaskSubjectforSalesRep</elementReference>
        </value>
    </variables>
    <variables>
        <name>TaskCollectionVar</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
    <variables>
        <name>TaskRecordVar</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Task</objectType>
    </variables>
</Flow>
